package main

import (
	"fmt"
	"os"

	"github.com/skandragon/dysonsphere/internal/cs"
)

type GameData struct {
	Name            string           `json:"name"`
	Descriptor      *GameDesc        `json:"descriptor"`
	StarCount       int32            `json:"star_count"`
	PlanetFactories []*PlanetFactory `json:"planet_factories"`
	GameTicks       int64            `json:"game_ticks"`
}

func parseGameData(b *Buffer) *GameData {
	const VERSION = 2
	checkVers(b, VERSION, "GameData")

	ret := &GameData{
		Name:       b.GetString(),
		Descriptor: parseGameDesc(b),
	}

	MakeUniverse(ret.Descriptor)

	ret.GameTicks = b.GetInt64le()

	parseGamePreferences(b)
	parseGameHistory(b)

	b.GetBoolean() // hidePlayerModel
	b.GetBoolean() // disableController

	parseGameStatistics(b)

	b.GetInt32le() // planetId

	parsePlayer(b)

	factoryCount := b.GetInt32le()

	parseGalacticTransport(b) // yes, this is out of order in the code too...

	ret.PlanetFactories = make([]*PlanetFactory, int(factoryCount))
	for i := 0; int32(i) < factoryCount; i++ {
		ret.PlanetFactories[i] = parsePlanetFactory(b, i)
	}

	ret.StarCount = b.GetInt32le()

	// dyson sphere mess...

	return ret
}

type Universe struct{}

func MakeUniverse(gd *GameDesc) *Universe {

	random := cs.MakePRNGSequence(gd.GalaxySeed)
	fmt.Println(random.Next())
	random.Next() // seed

	//num := generateTempPoses(seed, gd.StarCount, 4, 2.0, 2.3, 3.5, 0.18)

	random.NextDouble() // num2
	random.NextDouble() // num3
	random.NextDouble() // num4
	random.NextDouble() // num5

	for i := int32(0); i < gd.StarCount; i++ {
		seed2 := random.Next()
		makeStar(seed2)
	}

	return &Universe{}
}

func makeStar(seed int32) {
	random := cs.MakePRNGSequence(seed)
	seed2 := random.Next()
	fmt.Println(randomStarName(seed2))
	os.Exit(1)
}

var (
	con0 = []string{
		"p",
		"t",
		"c",
		"k",
		"b",
		"d",
		"g",
		"f",
		"ph",
		"s",
		"sh",
		"th",
		"h",
		"v",
		"z",
		"th",
		"r",
		"ch",
		"tr",
		"dr",
		"m",
		"n",
		"l",
		"y",
		"w",
		"sp",
		"st",
		"sk",
		"sc",
		"sl",
		"pl",
		"cl",
		"bl",
		"gl",
		"fr",
		"fl",
		"pr",
		"br",
		"cr",
	}

	con1 = []string{
		"thr",
		"ex",
		"ec",
		"el",
		"er",
		"ev",
		"il",
		"is",
		"it",
		"ir",
		"up",
		"ut",
		"ur",
		"un",
		"gt",
		"phr",
	}

	vow0 = []string{
		"a",
		"an",
		"am",
		"al",
		"o",
		"u",
		"xe",
	}

	vow1 = []string{
		"ea",
		"ee",
		"ie",
		"i",
		"e",
		"a",
		"er",
		"a",
		"u",
		"oo",
		"u",
		"or",
		"o",
		"oa",
		"ar",
		"a",
		"ei",
		"ai",
		"i",
		"au",
		"ou",
		"ao",
		"ir",
	}

	vow2 = []string{
		"y",
		"oi",
		"io",
		"iur",
		"ur",
		"ac",
		"ic",
	}

	ending = []string{
		"er",
		"n",
		"un",
		"or",
		"ar",
		"o",
		"o",
		"ans",
		"us",
		"ix",
		"us",
		"iurs",
		"a",
		"eo",
		"urn",
		"es",
		"eon",
		"y",
	}

	roman = []string{
		"",
		"I",
		"II",
		"III",
		"IV",
		"V",
		"VI",
		"VII",
		"VIII",
		"IX",
		"X",
		"XI",
		"XII",
		"XIII",
		"XIV",
		"XV",
		"XVI",
		"XVII",
		"XVIII",
		"XIX",
		"XX",
	}

	constellations = []string{
		"Andromedae",
		"Antliae",
		"Apodis",
		"Aquarii",
		"Aquilae",
		"Arae",
		"Arietis",
		"Aurigae",
		"Bootis",
		"Caeli",
		"Camelopardalis",
		"Cancri",
		"Canum Venaticorum",
		"Canis Majoris",
		"Canis Minoris",
		"Capricorni",
		"Carinae",
		"Cassiopeiae",
		"Centauri",
		"Cephei",
		"Ceti",
		"Chamaeleontis",
		"Circini",
		"Columbae",
		"Comae Berenices",
		"Coronae Australis",
		"Coronae Borealis",
		"Corvi",
		"Crateris",
		"Crucis",
		"Cygni",
		"Delphini",
		"Doradus",
		"Draconis",
		"Equulei",
		"Eridani",
		"Fornacis",
		"Geminorum",
		"Gruis",
		"Herculis",
		"Horologii",
		"Hydrae",
		"Hydri",
		"Indi",
		"Lacertae",
		"Leonis",
		"Leonis Minoris",
		"Leporis",
		"Librae",
		"Lupi",
		"Lyncis",
		"Lyrae",
		"Mensae",
		"Microscopii",
		"Monocerotis",
		"Muscae",
		"Normae",
		"Octantis",
		"Ophiuchii",
		"Orionis",
		"Pavonis",
		"Pegasi",
		"Persei",
		"Phoenicis",
		"Pictoris",
		"Piscium",
		"Piscis Austrini",
		"Puppis",
		"Pyxidis",
		"Reticuli",
		"Sagittae",
		"Sagittarii",
		"Scorpii",
		"Sculptoris",
		"Scuti",
		"Serpentis",
		"Sextantis",
		"Tauri",
		"Telescopii",
		"Trianguli",
		"Trianguli Australis",
		"Tucanae",
		"Ursae Majoris",
		"Ursae Minoris",
		"Velorum",
		"Virginis",
		"Volantis",
		"Vulpeculae",
	}

	alphabeta = []string{
		"Alpha",
		"Beta",
		"Gamma",
		"Delta",
		"Epsilon",
		"Zeta",
		"Eta",
		"Theta",
		"Iota",
		"Kappa",
		"Lambda",
	}

	alphabetaLetter = []string{
		"α",
		"β",
		"γ",
		"δ",
		"ε",
		"ζ",
		"η",
		"θ",
		"ι",
		"κ",
		"λ",
	}

	rawStarNames = []string{
		"Acamar",
		"Achernar",
		"Achird",
		"Acrab",
		"Acrux",
		"Acubens",
		"Adhafera",
		"Adhara",
		"Adhil",
		"Agena",
		"Aladfar",
		"Albaldah",
		"Albali",
		"Albireo",
		"Alchiba",
		"Alcor",
		"Alcyone",
		"Alderamin",
		"Aldhibain",
		"Aldib",
		"Alfecca",
		"Alfirk",
		"Algedi",
		"Algenib",
		"Algenubi",
		"Algieba",
		"Algjebbath",
		"Algol",
		"Algomeyla",
		"Algorab",
		"Alhajoth",
		"Alhena",
		"Alifa",
		"Alioth",
		"Alkaid",
		"Alkalurops",
		"Alkaphrah",
		"Alkes",
		"Alkhiba",
		"Almach",
		"Almeisan",
		"Almuredin",
		"AlNa'ir",
		"Alnasl",
		"Alnilam",
		"Alnitak",
		"Alniyat",
		"Alphard",
		"Alphecca",
		"Alpheratz",
		"Alrakis",
		"Alrami",
		"Alrescha",
		"AlRijil",
		"Alsahm",
		"Alsciaukat",
		"Alshain",
		"Alshat",
		"Alshemali",
		"Alsuhail",
		"Altair",
		"Altais",
		"Alterf",
		"Althalimain",
		"AlTinnin",
		"Aludra",
		"AlulaAustralis",
		"AlulaBorealis",
		"Alwaid",
		"Alwazn",
		"Alya",
		"Alzirr",
		"AmazonStar",
		"Ancha",
		"Anchat",
		"AngelStern",
		"Angetenar",
		"Ankaa",
		"Anser",
		"Antecanis",
		"Apollo",
		"Arich",
		"Arided",
		"Arietis",
		"Arkab",
		"ArkebPrior",
		"Arneb",
		"Arrioph",
		"AsadAustralis",
		"Ascella",
		"Aschere",
		"AsellusAustralis",
		"AsellusBorealis",
		"AsellusPrimus",
		"Ashtaroth",
		"Asmidiske",
		"Aspidiske",
		"Asterion",
		"Asterope",
		"Asuia",
		"Athafiyy",
		"Atik",
		"Atlas",
		"Atria",
		"Auva",
		"Avior",
		"Azelfafage",
		"Azha",
		"Azimech",
		"BatenKaitos",
		"Becrux",
		"Beid",
		"Bellatrix",
		"Benatnasch",
		"Biham",
		"Botein",
		"Brachium",
		"Bunda",
		"Cajam",
		"Calbalakrab",
		"Calx",
		"Canicula",
		"Capella",
		"Caph",
		"Castor",
		"Castula",
		"Cebalrai",
		"Ceginus",
		"Celaeno",
		"Chara",
		"Chertan",
		"Choo",
		"Clava",
		"CorCaroli",
		"CorHydrae",
		"CorLeonis",
		"Cornu",
		"CorScorpii",
		"CorSepentis",
		"CorTauri",
		"Coxa",
		"Cursa",
		"Cymbae",
		"Cynosaura",
		"Dabih",
		"DenebAlgedi",
		"DenebDulfim",
		"DenebelOkab",
		"DenebKaitos",
		"DenebOkab",
		"Denebola",
		"Dhalim",
		"Dhur",
		"Diadem",
		"Difda",
		"DifdaalAuwel",
		"Dnoces",
		"Dubhe",
		"Dziban",
		"Dzuba",
		"Edasich",
		"ElAcola",
		"Elacrab",
		"Electra",
		"Elgebar",
		"Elgomaisa",
		"ElKaprah",
		"ElKaridab",
		"Elkeid",
		"ElKhereb",
		"Elmathalleth",
		"Elnath",
		"ElPhekrah",
		"Eltanin",
		"Enif",
		"Erakis",
		"Errai",
		"FalxItalica",
		"Fidis",
		"Fomalhaut",
		"Fornacis",
		"FumAlSamakah",
		"Furud",
		"Gacrux",
		"Gallina",
		"GarnetStar",
		"Gemma",
		"Genam",
		"Giausar",
		"GiedePrime",
		"Giedi",
		"Gienah",
		"Gienar",
		"Gildun",
		"Girtab",
		"Gnosia",
		"Gomeisa",
		"Gorgona",
		"Graffias",
		"Hadar",
		"Hamal",
		"Haris",
		"Hasseleh",
		"Hastorang",
		"Hatysa",
		"Heka",
		"Hercules",
		"Heze",
		"Hoedus",
		"Homam",
		"HyadumPrimus",
		"Icalurus",
		"Iclarkrav",
		"Izar",
		"Jabbah",
		"Jewel",
		"Jugum",
		"Juza",
		"Kabeleced",
		"Kaff",
		"Kaffa",
		"Kaffaljidma",
		"Kaitain",
		"KalbalAkrab",
		"Kat",
		"KausAustralis",
		"KausBorealis",
		"KausMedia",
		"Keid",
		"KeKouan",
		"Kelb",
		"Kerb",
		"Kerbel",
		"KiffaBoraelis",
		"Kitalpha",
		"Kochab",
		"Kornephoros",
		"Kraz",
		"Ksora",
		"Kuma",
		"Kurhah",
		"Kursa",
		"Lesath",
		"Maasym",
		"Maaz",
		"Mabsuthat",
		"Maia",
		"Marfik",
		"Markab",
		"Marrha",
		"Matar",
		"Mebsuta",
		"Megres",
		"Meissa",
		"Mekbuda",
		"Menkalinan",
		"Menkar",
		"Menkent",
		"Menkib",
		"Merak",
		"Meres",
		"Merga",
		"Meridiana",
		"Merope",
		"Mesartim",
		"Metallah",
		"Miaplacidus",
		"Mimosa",
		"Minelauva",
		"Minkar",
		"Mintaka",
		"Mirac",
		"Mirach",
		"Miram",
		"Mirfak",
		"Mirzam",
		"Misam",
		"Mismar",
		"Mizar",
		"Muhlifain",
		"Muliphein",
		"Muphrid",
		"Muscida",
		"NairalSaif",
		"NairalZaurak",
		"Naos",
		"Nash",
		"Nashira",
		"Navi",
		"Nekkar",
		"Nicolaus",
		"Nihal",
		"Nodus",
		"Nunki",
		"Nusakan",
		"OculusBoreus",
		"Okda",
		"Osiris",
		"OsPegasi",
		"Palilicium",
		"Peacock",
		"Phact",
		"Phecda",
		"Pherkad",
		"PherkadMinor",
		"Pherkard",
		"Phoenice",
		"Phurad",
		"Pishpai",
		"Pleione",
		"Polaris",
		"Pollux",
		"Porrima",
		"Postvarta",
		"Praecipua",
		"Procyon",
		"Propus",
		"Protrygetor",
		"Pulcherrima",
		"Rana",
		"RanaSecunda",
		"Rasalas",
		"Rasalgethi",
		"Rasalhague",
		"Rasalmothallah",
		"RasHammel",
		"Rastaban",
		"Reda",
		"Regor",
		"Regulus",
		"Rescha",
		"RigilKentaurus",
		"RiglalAwwa",
		"Rotanen",
		"Ruchba",
		"Ruchbah",
		"Rukbat",
		"Rutilicus",
		"Saak",
		"Sabik",
		"Sadachbia",
		"Sadalbari",
		"Sadalmelik",
		"Sadalsuud",
		"Sadatoni",
		"Sadira",
		"Sadr",
		"Saidak",
		"Saiph",
		"Salm",
		"Sargas",
		"Sarin",
		"Sartan",
		"Sceptrum",
		"Scheat",
		"Schedar",
		"Scheddi",
		"Schemali",
		"Scutulum",
		"SeatAlpheras",
		"Segin",
		"Seginus",
		"Shaula",
		"Shedir",
		"Sheliak",
		"Sheratan",
		"Singer",
		"Sirius",
		"Sirrah",
		"Situla",
		"Skat",
		"Spica",
		"Sterope",
		"Subra",
		"Suha",
		"Suhail",
		"SuhailHadar",
		"SuhailRadar",
		"Suhel",
		"Sulafat",
		"Superba",
		"Svalocin",
		"Syrma",
		"Tabit",
		"Tais",
		"Talitha",
		"TaniaAustralis",
		"TaniaBorealis",
		"Tarazed",
		"Tarf",
		"TaTsun",
		"Taygeta",
		"Tegmen",
		"Tejat",
		"TejatPrior",
		"Terebellum",
		"Theemim",
		"Thuban",
		"Tolimann",
		"Tramontana",
		"Tsih",
		"Tureis",
		"Unukalhai",
		"Vega",
		"Venabulum",
		"Venator",
		"Vendemiatrix",
		"Vespertilio",
		"Vildiur",
		"Vindemiatrix",
		"Wasat",
		"Wazn",
		"YedPosterior",
		"YedPrior",
		"Zaniah",
		"Zaurak",
		"Zavijava",
		"ZenithStar",
		"Zibel",
		"Zosma",
		"Zubenelakrab",
		"ZubenElgenubi",
		"Zubeneschamali",
		"ZubenHakrabi",
		"Zubra",
	}

	rawGiantNames = []string{
		"AH Scorpii",
		"Aldebaran",
		"Alpha Herculis",
		"Antares",
		"Arcturus",
		"AV Persei",
		"BC Cygni",
		"Betelgeuse",
		"BI Cygni",
		"BO Carinae",
		"Canopus",
		"CE Tauri",
		"CK Carinae",
		"CW Leonis",
		"Deneb",
		"Epsilon Aurigae",
		"Eta Carinae",
		"EV Carinae",
		"IX Carinae",
		"KW Sagittarii",
		"KY Cygni",
		"Mira",
		"Mu Cephei",
		"NML Cygni",
		"NR Vulpeculae",
		"PZ Cassiopeiae",
		"R Doradus",
		"R Leporis",
		"Rho Cassiopeiae",
		"Rigel",
		"RS Persei",
		"RT Carinae",
		"RU Virginis",
		"RW Cephei",
		"S Cassiopeiae",
		"S Cephei",
		"S Doradus",
		"S Persei",
		"SU Persei",
		"TV Geminorum",
		"U Lacertae",
		"UY Scuti",
		"V1185 Scorpii",
		"V354 Cephei",
		"V355 Cepheus",
		"V382 Carinae",
		"V396 Centauri",
		"V437 Scuti",
		"V509 Cassiopeiae",
		"V528 Carinae",
		"V602 Carinae",
		"V648 Cassiopeiae",
		"V669 Cassiopeiae",
		"V838 Monocerotis",
		"V915 Scorpii",
		"VV Cephei",
		"VX Sagittarii",
		"VY Canis Majoris",
		"WOH G64",
		"XX Persei",
	}
)

func randomName(seed int32) string {
	random := cs.MakePRNGSequence(seed)
	num := int32(random.NextDouble()*1.8 + 2.3)

	text := ""

	for i := int32(0); i < num; i++ {
		if random.NextDouble() < 0.05000000074505806 && i == 0 {
			text += vow0[random.NextWithMax(int32(len(vow0)))]
		} else {
			if random.NextDouble() < 0.9700000286102295 || num >= 4 {
				text += con0[int(random.NextWithMax(int32(len(con0))))]
			} else {
				text += con1[int(random.NextWithMax(int32(len(con1))))]
			}
			if i == num-1 && random.NextDouble() < 0.8999999761581421 {
				text += ending[int(random.NextWithMax(int32(len(ending))))]
			} else if random.NextDouble() < 0.9700000286102295 {
				text += vow1[int(random.NextWithMax(int32(len(vow1))))]
			} else {
				text += vow2[int(random.NextWithMax(int32(len(vow2))))]
			}
		}
	}
	return text
}

func randomStarName(seed int32) string {
	random := cs.MakePRNGSequence(seed)

	for i := 0; i < 256; i++ {
		seed2 := random.Next()
		text := randomStarNameInternal(seed2)
		// need to check for duplicates...
		return text
	}
}
